<div class="row form-group">
    <div class="col-sm-6">
        <label>Vendor Style Number</label>
        <%= form.text_field :vendor_style_number, class: 'form-control', :required => true %>
    </div>
    <div class="col-sm-6">
        <label>Quantity</label>
        <%= form.number_field :quantity, step: '1', placeholder: '150', :class => 'form-control' %>
    </div>
</div>
<div class="row form-group"> 
    <div class="col-sm-6">
        <label>Status</label>
        <%= form.select :status, options_for_select( Style.statuses.map{ |k,v| [k.humanize, k] }, @style.status), { }, class: 'form-control' %>
    </div>
    <div class="col-sm-6">
        <label>Delivery Date</label>
        <%= form.text_field :delivery_date, :class => 'form-control' %>
    </div>
</div>
<div class="row form-group"> 
    <div class="col-sm-4">
        <label>Wholesale Cost</label>
        <%= form.number_field :wholesale_cost, step: '.01', placeholder: '26.99', :class => 'form-control' %>
    </div>
    <div class="col-sm-4">
        <label>Negotiated Cost</label>
        <%= form.number_field :negotiated_cost, step: '.01', placeholder: '25.01', :class => 'form-control' %>
    </div>
    <div class="col-sm-4">
        <label>Retail Price</label>
        <%= form.number_field :retail_price, step: '.01', placeholder: '100.00', :class => 'form-control' %>
    </div>
</div>
<div class="row form-group">
    <div class="col-sm-4">
        <label>IMU:</label>
        <span id="imu-data-display">
            N/A
        </span>
    </div>
    <div class="col-sm-4">
        <label>Exclusive?</label>
        <%= form.check_box :exclusive %>
    </div>
</div>
<div class="row form-group"> 
    <div class="col-sm-6">
        <label>Color</label>
        <%= form.text_field :color, :class => 'form-control' %>
    </div>
    <div class="col-sm-6">
        <label>Category</label>
        <%= form.select :category_name, options_for_select( Category.all.map{ |c| [c.display_name, c.name ] }, @style.category_name), { }, class: 'form-control' %>
    </div>
</div>
<div class="row form-group"> 
    <div class="col-sm-12">
        <label>Notes</label>
        <%= form.text_area :notes, :class => 'form-control' %>
    </div>
</div>

<%- if params[:action] == "new" %>
  <div class="row form-group">
    <%= form.file_field :photo, type: 'file', class: 'hidden'%>
    <div class="ghost-photo-input-group hidden">
      <input type='file' name="style[photos][]">
      <img src="#" style="max-width:80px;margin-left:20px;"/>
    </div>
    <div class="col-sm-6 photo-upload-fields">
      <div class="photo-input-group">
        <input type='file' name="style[photos][]">
        <img src="#" style="max-width:80px;margin-left:20px;"/>
      </div>
    </div>
  </div>
<% end %>

<div class="half-wide">
    <button type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
</div>
<div class="form-group half-wide text-right">
    <%= form.submit 'Submit Style', class: 'btn btn-primary' %>
</div>

<script>
  $(document).ready(function() {
    $( "#style_delivery_date" ).datepicker({
      dateFormat: "yy-mm-dd"
    });

    bind_imu_calculator();

    $(".photo-upload-fields").on('change', 'input', function(){
      readURL(this, $(this).siblings('img'));
    });

  }); //end document ready


  function readURL(input, render_element) {
    console.log(input)
    if (input.files && input.files[0]) {
      var reader = new FileReader();

      // TODO FIXME
      // getOrientation(input.files[0], function(orientation) {
      //   rotatePhoto(orientation);
      // });

      reader.onload = function (e) {
        render_element.attr('src', e.target.result);
        duplicateUploadField();

      }

      reader.readAsDataURL(input.files[0]);

    }
  }

  // function rotatePhoto(orientation){
  //   alert('yo dawg' + orientation)
  // }

  function duplicateUploadField(){
    var htmlCloneString = $('.ghost-photo-input-group').clone()
                              .removeClass('hidden')
                              .removeClass('ghost-photo-input-group')
                              .addClass('photo-input-group');

    $('.photo-upload-fields').prepend(htmlCloneString)
  }

  function getOrientation(file, callback) {
    var reader = new FileReader();
    reader.onload = function(e) {

      var view = new DataView(e.target.result);
      if (view.getUint16(0, false) != 0xFFD8) return callback(-2);
      var length = view.byteLength, offset = 2;
      while (offset < length) {
        var marker = view.getUint16(offset, false);
        offset += 2;
        if (marker == 0xFFE1) {
          if (view.getUint32(offset += 2, false) != 0x45786966) return callback(-1);
          var little = view.getUint16(offset += 6, false) == 0x4949;
          offset += view.getUint32(offset + 4, little);
          var tags = view.getUint16(offset, little);
          offset += 2;
          for (var i = 0; i < tags; i++)
            if (view.getUint16(offset + (i * 12), little) == 0x0112)
              return callback(view.getUint16(offset + (i * 12) + 8, little));
        }
        else if ((marker & 0xFF00) != 0xFF00) break;
        else offset += view.getUint16(offset, false);
      }
      return callback(-1);
    };
    reader.readAsArrayBuffer(file.slice(0, 64 * 1024));
  }

</script>

